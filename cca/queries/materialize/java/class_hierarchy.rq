
DEFINE input:inference "ont.cpi"

PREFIX ent:  <http://codinuum.com/fact/entity/>
PREFIX rel:  <http://codinuum.com/fact/version/release/>
PREFIX ext:  <http://codinuum.com/fact/external/>
PREFIX src:  <http://codinuum.com/ontologies/2012/10/source-code-entity#>
PREFIX ver:  <http://codinuum.com/ontologies/2012/10/versioning#>
PREFIX chg:  <http://codinuum.com/ontologies/2012/10/primitive-change#>
PREFIX java: <http://codinuum.com/ontologies/2012/10/java-entity#>
PREFIX c:    <http://codinuum.com/ontologies/2012/10/c-entity#>


INSERT {
  ?subclass java:subClassOf ?class .
}
WHERE {

  {
    SELECT DISTINCT ?subclass ?ver ?tname ?tname_e
    WHERE {

      ?subclass a java:TypeDeclaration ;
                java:fullyQualifiedName ?fqn0 ;
                ver:version ?ver .

      ?ei a ?cat OPTION (INFERENCE NONE) ;
          java:inTypeDeclaration ?subclass .

      FILTER (?cat IN (java:Extends,java:ExtendsInterfaces,java:Implements))

      ?ty a java:ReferenceType ;
          java:name ?tname ;
          src:parent ?ei .

      BIND (STRBEFORE(?tname, "<") AS ?tname_e)

    } GROUP BY ?subclass ?ver ?tname ?tname_e
  }

  {
    ?class a java:TypeDeclaration ;
           src:inFile ?file ;
           java:fullyQualifiedName ?tname ;
           ver:version ?ver .
  }
  UNION
  {
    ?class a java:TypeDeclaration ;
           src:inFile ?file ;
           java:fullyQualifiedName ?tname_e ;
           ver:version ?ver .
  }
  # UNION
  # {
  #   {
  #     SELECT DISTINCT ?class ?tname ?ver ?file ?fqn
  #     WHERE {

  #       ?class a java:TypeDeclaration ;
  #              src:inFile ?file ;
  #              java:name ?tname ;
  #              java:fullyQualifiedName ?fqn ;
  #              ver:version ?ver .

  #     } GROUP BY ?class ?tname ?ver ?file ?fqn
  #   }

  #   ?pkg a java:PackageDeclaration ;
  #        src:parent/src:inFile ?file ;
  #        java:name ?pname .

  #   FILTER (STRENDS(?fqn, CONCAT(".", ?tname)) ||
  #           STRENDS(?fqn, CONCAT("$$", ?tname)))

  #   FILTER (STRSTARTS(?fqn, CONCAT(?pname, ".")))
  # }

}
