
DEFINE input:inference "ont.cpi"

PREFIX ent:  <http://codinuum.com/fact/entity/>
PREFIX rel:  <http://codinuum.com/fact/version/release/>
PREFIX ext:  <http://codinuum.com/fact/external/>
PREFIX src:  <http://codinuum.com/ontologies/2012/10/source-code-entity#>
PREFIX ver:  <http://codinuum.com/ontologies/2012/10/versioning#>
PREFIX chg:  <http://codinuum.com/ontologies/2012/10/primitive-change#>
PREFIX java: <http://codinuum.com/ontologies/2012/10/java-entity#>
PREFIX c:    <http://codinuum.com/ontologies/2012/10/c-entity#>


INSERT {
  ?expr java:ofReferenceType ?tdecl .
}
WHERE {

  ?expr a java:Expression .

  {
    ?expr a java:ArrayAccess ;
          src:child0/java:ofReferenceType ?tdecl .
  }
  UNION
  {
    ?expr a java:ParenthesizedExpression ;
          src:child0/java:ofReferenceType ?tdecl .
  }
  UNION
  {
    {
      SELECT DISTINCT ?td ?fname ?tyname ?tdecl ?src
      WHERE {

        {
          SELECT DISTINCT ?td0 ?fname ?tyname
          WHERE {

            ?field a java:FieldDeclaration ;
                   src:child1 ?ty ;
                   src:child2 ?dtor ;
                   java:inTypeDeclaration ?td0 .

            ?ty a java:ReferenceType ;
                src:parent ?field ;
                java:name ?tyname .

            ?dtor a java:VariableDeclarator ;
                  src:parent ?field ;
                  java:name ?fname .

          } GROUP BY ?td0 ?fname ?tyname
        }

        ?td0 src:inSourceTree ?src .

        ?td a java:TypeDeclaration ;
            java:subClassOf* ?td0 ;
            src:inSourceTree ?src .

        ?tdecl a java:TypeDeclaration ;
               src:inSourceTree ?src ;
               java:fullyQualifiedName ?tyname .

      } GROUP BY ?td ?fname ?tyname ?tdecl ?src
    }
    ?expr a java:FieldAccess ;
          java:inTypeDeclaration/src:inSourceTree ?src ;
          java:name ?fname ;
          src:child0 ?e .

    ?e a java:Expression ;
       java:ofReferenceType ?td .
  }

  FILTER NOT EXISTS {
    ?expr java:ofReferenceType [] .
  }

}
