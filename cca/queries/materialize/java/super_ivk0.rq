
DEFINE input:inference "ont.cpi"

PREFIX ent:  <http://codinuum.com/fact/entity/>
PREFIX rel:  <http://codinuum.com/fact/version/release/>
PREFIX ext:  <http://codinuum.com/fact/external/>
PREFIX src:  <http://codinuum.com/ontologies/2012/10/source-code-entity#>
PREFIX ver:  <http://codinuum.com/ontologies/2012/10/versioning#>
PREFIX chg:  <http://codinuum.com/ontologies/2012/10/primitive-change#>
PREFIX java: <http://codinuum.com/ontologies/2012/10/java-entity#>
PREFIX c:    <http://codinuum.com/ontologies/2012/10/c-entity#>
PREFIX soot: <http://codinuum.com/ontologies/2016/05/soot#>

INSERT {
  ?ivk java:mayInvoke ?sig .
  ?ivk java:mayInvokeMethod ?sctor .
}
WHERE {

  FILTER NOT EXISTS {
    ?ivk java:mayInvoke [] ;
         java:mayInvokeMethod [] .
  }

  ?class a java:TypeDeclaration ;
         java:subClassOf ?super ;
         src:inFile/src:location ?loc .

  ?ctor a java:ConstructorDeclaration ;
        java:inTypeDeclaration ?class .

  ?ivk a java:SuperInvocation ;
       java:inConstructor ?ctor ;
       src:child1 ?args .

  FILTER NOT EXISTS {
    ?a src:parent ?args .
  }

  ?sctor a java:ConstructorDeclaration ;
         java:nParameters 0 ;
         java:inTypeDeclaration ?super ;
         java:fullyQualifiedName ?fqn ;
         java:signature ?sig0 .

  BIND (CONCAT(?fqn, ?sig0) AS ?sig)

}
