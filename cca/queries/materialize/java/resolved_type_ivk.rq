
DEFINE input:inference "ont.cpi"

PREFIX ent:  <http://codinuum.com/fact/entity/>
PREFIX rel:  <http://codinuum.com/fact/version/release/>
PREFIX ext:  <http://codinuum.com/fact/external/>
PREFIX src:  <http://codinuum.com/ontologies/2012/10/source-code-entity#>
PREFIX ver:  <http://codinuum.com/ontologies/2012/10/versioning#>
PREFIX chg:  <http://codinuum.com/ontologies/2012/10/primitive-change#>
PREFIX java: <http://codinuum.com/ontologies/2012/10/java-entity#>
PREFIX c:    <http://codinuum.com/ontologies/2012/10/c-entity#>


INSERT {
  ?ivk java:name ?fqn .
}
WHERE {

  {
    SELECT DISTINCT ?ivk ?fqn ?pkgname
    WHERE {

      {
        SELECT DISTINCT ?pkgname ?fqn ?src ?nparams ?mname
        WHERE {

          ?meth a java:MethodDeclaration ;
                java:inTypeDeclaration ?tdecl0 ;
                java:name ?uqn ;
                java:fullyQualifiedName ?fqn0 ;
                java:nParameters ?nparams .

          ?tdecl0 src:inSourceTree ?src ;
                  java:name ?tname ;
                  src:inFile ?file0 .

          ?pkg0 a java:PackageDeclaration ;
                src:parent/src:inFile ?file0 ;
                java:name ?pkgname .

          BIND (CONCAT(?tname, ".", ?uqn) AS ?mname)

          BIND (REPLACE(?fqn0, "[$$]", ".") AS ?fqn)

        } GROUP BY ?pkgname ?fqn ?src ?nparams ?mname
      }

      FILTER (?fqn = CONCAT(?pkgname, ".", ?mname))

      ?ivk a java:Invocation ;
           java:inTypeDeclaration/src:inSourceTree ?src ;
           java:name ?mname ;
           java:nArguments ?nparams .

      FILTER (EXISTS {
        ?ivk a java:TypeMethodInvocation .
      } || EXISTS {
        ?ivk a java:TypeMethodInvocationStatement .
      })

    } GROUP BY ?ivk ?fqn ?pkgname
  }

  FILTER EXISTS {
    ?ivk java:inTypeDeclaration/src:inFile ?file1 .

    ?pkg1 a java:PackageDeclaration ;
          src:parent/src:inFile ?file1 ;
          java:name ?pkgname .
  }

}
