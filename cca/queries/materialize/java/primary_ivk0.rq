
DEFINE input:inference "ont.cpi"

PREFIX ent:  <http://codinuum.com/fact/entity/>
PREFIX rel:  <http://codinuum.com/fact/version/release/>
PREFIX ext:  <http://codinuum.com/fact/external/>
PREFIX src:  <http://codinuum.com/ontologies/2012/10/source-code-entity#>
PREFIX ver:  <http://codinuum.com/ontologies/2012/10/versioning#>
PREFIX chg:  <http://codinuum.com/ontologies/2012/10/primitive-change#>
PREFIX java: <http://codinuum.com/ontologies/2012/10/java-entity#>
PREFIX c:    <http://codinuum.com/ontologies/2012/10/c-entity#>

INSERT {
  ?ivk java:mayInvoke ?sig .
  ?ivk java:mayInvokeMethod ?meth .
}
WHERE {

  FILTER NOT EXISTS {
    ?ivk java:mayInvoke [] ;
         java:mayInvokeMethod [] .
  }

  {
    SELECT DISTINCT ?mname ?meth ?mfqn ?msig ?tdecl ?ver ?ivk
    WHERE {

      {
        SELECT DISTINCT ?mname ?meth ?mfqn ?msig ?tdecl ?ver ?ivk
        WHERE {

          {
            SELECT DISTINCT ?mname ?meth ?mfqn ?msig ?tdecl ?ver
            WHERE {

              {
                SELECT DISTINCT ?mname ?tdecl0 ?meth ?mfqn ?msig ?tdecl1 ?ver
                WHERE {

                  {
                    SELECT DISTINCT ?mname ?tdecl0 ?meth ?mfqn ?msig ?ver
                    WHERE {

                      ?meth a java:MethodDeclaration ;
                            java:name ?mname ;
                            java:nParameters 0 ;
                            java:inTypeDeclaration ?tdecl0 ;
                            #src:child5 ?body ;
                            java:fullyQualifiedName ?mfqn ;
                            java:signature ?msig .

                      ?tdecl0 ver:version ?ver .

                    } GROUP BY ?mname ?tdecl0 ?meth ?mfqn ?msig ?ver
                  }

                  ?tdecl1 java:subTypeOf ?tdecl0 OPTION (TRANSITIVE,
                                                         T_DISTINCT,
                                                         #T_SHORTEST_ONLY,
                                                         T_NO_CYCLES,
                                                         T_MIN(0)) .

                  ?tdecl1 ver:version ?ver .

                } GROUP BY ?mname ?tdecl0 ?meth ?mfqn ?msig ?tdecl1 ?ver
              }

              {
                ?tdecl1 java:fullyQualifiedName ?tfqn .
                BIND (?tdecl1 as ?tdecl)
              } UNION {
                ?tdecl a java:TypeDeclaration ;
                       java:inTypeDeclaration+ ?tdecl1 ;
                       java:fullyQualifiedName ?tfqn ;
                       ver:version ?ver .
              }
              # ?tdecl java:inTypeDeclaration* ?tdecl1 .
              # ?tdecl ver:version ?ver .

            } GROUP BY ?mname ?meth ?mfqn ?msig ?tdecl ?ver
          }

          ?e a java:Primary ;
             src:parent ?ivk ;
             java:ofReferenceType ?tdecl .

        } GROUP BY ?mname ?meth ?mfqn ?msig ?tdecl ?ver ?ivk
      }

      FILTER EXISTS {
        ?ivk java:name ?mname .
      }

      FILTER (EXISTS {
        ?ivk a java:PrimaryMethodInvocation .
      } || EXISTS {
        ?ivk a java:PrimaryMethodInvocationStatement .
      })

    } GROUP BY ?mname ?meth ?mfqn ?msig ?tdecl ?ver ?ivk
  }

  ?ivk java:nArguments 0 ;
       src:child2 ?args .

  ?args a java:Arguments .

  BIND (CONCAT(?mfqn, ?msig) AS ?sig)

}
