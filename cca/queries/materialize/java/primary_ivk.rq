
DEFINE input:inference "ont.cpi"

PREFIX ent:  <http://codinuum.com/fact/entity/>
PREFIX rel:  <http://codinuum.com/fact/version/release/>
PREFIX ext:  <http://codinuum.com/fact/external/>
PREFIX src:  <http://codinuum.com/ontologies/2012/10/source-code-entity#>
PREFIX ver:  <http://codinuum.com/ontologies/2012/10/versioning#>
PREFIX chg:  <http://codinuum.com/ontologies/2012/10/primitive-change#>
PREFIX java: <http://codinuum.com/ontologies/2012/10/java-entity#>
PREFIX c:    <http://codinuum.com/ontologies/2012/10/c-entity#>

INSERT {
  ?ivk java:mayInvoke ?sig .
  ?ivk java:mayInvokeMethod ?meth .
}
WHERE {

  FILTER NOT EXISTS {
    ?ivk java:mayInvoke [] ;
         java:mayInvokeMethod [] .
  }

  {
    SELECT DISTINCT ?ivk ?meth ?sig ?cat
    WHERE {

      {
        SELECT ?mname ?tdecl
        (COUNT(DISTINCT ?meth1) AS ?n) (SAMPLE(?meth1) AS ?meth)
        WHERE {

          ?meth1 a java:MethodDeclaration ;
                 #src:child5 ?body ;
                 java:extendedName ?mname ;
                 java:inTypeDeclaration ?tdecl0 ;
                 src:child0 ?mods .

          ?tdecl java:subClassOf* ?tdecl0 .

          FILTER EXISTS {
            ?tdecl0 ver:version ?v .
            ?tdecl ver:version ?v .
          }

        } GROUP BY ?mname ?tdecl
      }

      FILTER (?n = 1)

      ?tdecl ver:version ?ver .

      ?ivk a ?cat OPTION (INFERENCE NONE) ;
           java:inTypeDeclaration/ver:version ?ver ;
           java:extendedName ?mname ;
           src:child0 ?e .

      ?e a java:Expression ;
         java:ofReferenceType ?tdecl .

    } GROUP BY ?ivk ?meth ?sig ?cat
  }

  FILTER (?cat IN (java:PrimaryMethodInvocation,java:PrimaryMethodInvocationStatement))

  ?meth java:fullyQualifiedName ?mfqn ;
        java:signature ?msig .

  BIND (CONCAT(?mfqn, ?msig) AS ?sig)

}
