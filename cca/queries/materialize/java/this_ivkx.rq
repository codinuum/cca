
DEFINE input:inference "ont.cpi"

PREFIX ent:  <http://codinuum.com/fact/entity/>
PREFIX rel:  <http://codinuum.com/fact/version/release/>
PREFIX ext:  <http://codinuum.com/fact/external/>
PREFIX src:  <http://codinuum.com/ontologies/2012/10/source-code-entity#>
PREFIX ver:  <http://codinuum.com/ontologies/2012/10/versioning#>
PREFIX chg:  <http://codinuum.com/ontologies/2012/10/primitive-change#>
PREFIX java: <http://codinuum.com/ontologies/2012/10/java-entity#>
PREFIX c:    <http://codinuum.com/ontologies/2012/10/c-entity#>
PREFIX soot: <http://codinuum.com/ontologies/2016/05/soot#>

INSERT {
  ?ivk java:mayInvoke ?sig .
  ?ivk java:mayInvokeMethod ?meth .
}
WHERE {

  FILTER NOT EXISTS {
    ?ivk java:mayInvoke [] ;
         java:mayInvokeMethod [] .
  }

  VALUES ?nparams { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 }

  {
    SELECT DISTINCT ?ver ?ivk ?meth ?mfqn ?msig ?args ?nparams ?nargs
    WHERE {

      {
        SELECT DISTINCT ?ivk ?args ?class ?ver ?nargs
        WHERE {

          ?ivk a java:ThisInvocation ;
               java:inConstructor ?ctor0 ;
               java:nArguments ?nargs ;
               src:child1 ?args .

          ?ctor0 a java:ConstructorDeclaration ;
                 java:inTypeDeclaration ?class .

          ?class a java:TypeDeclaration ;
                 ver:version ?ver .

        } GROUP BY ?ivk ?args ?class ?ver ?nargs
      }

      ?meth a java:ConstructorDeclaration ;
            java:nParameters ?nparams ;
            java:inTypeDeclaration ?class ;
            java:fullyQualifiedName ?mfqn ;
            java:signature ?msig .

    } GROUP BY ?ver ?ivk ?meth ?mfqn ?msig ?args ?nparams ?nargs
  }

  FILTER NOT EXISTS {
    GRAPH <http://codinuum.com/ont/cpi> {
      ?p_childx rdfs:subPropertyOf src:child .
    }
    BIND (STRAFTER(STR(?p_childx), "child") AS ?x)
    BIND (fn:number(?x) AS ?xn)
    FILTER (?xn < ?nparams)

    BIND (IRI(CONCAT(STR(java:parameterTypeName), ?x)) AS ?p_param_ty_namex)
    BIND (IRI(CONCAT(STR(java:parameterTypeDims), ?x)) AS ?p_param_ty_dimsx)

    ?args ?p_childx ?ax .
    ?meth ?p_param_ty_namex ?ptynamex .
    OPTIONAL {
      ?meth ?p_param_ty_dimsx ?ptydimsx .
    }
    OPTIONAL {
      ?ax java:typeDims ?atydimsx .
    }

    FILTER ((NOT EXISTS {
      ?ax java:typeName ?atynamex .
      FILTER (?atynamex = ?ptynamex)
    } && NOT EXISTS {
      ?ptyx a java:TypeDeclaration ;
            ver:version ?ver ;
            java:fullyQualifiedName ?ptynamex .
      ?ax java:ofReferenceType ?atyx .
      ?atyx java:subTypeOf ?ptyx OPTION (TRANSITIVE, T_DISTINCT, T_MIN(0)) ;
            ver:version ?ver .
    } && ?ptynamex != "java.lang.Object") ||
            (BOUND(?atydimsx) && ?atydimsx != ?ptydimsx))
  }

  FILTER (?nparams = ?nargs || (?nargs = ?nparams - 1 && EXISTS {
    ?meth java:isVariableArityMethod "true" .
  }) || (?nparams < ?nargs && EXISTS {
    ?meth java:isVariableArityMethod "true" .
  } && NOT EXISTS {

    BIND (STR(?nparams-1) AS ?lastp)
    BIND (IRI(CONCAT(STR(java:parameterTypeName), ?lastp)) AS ?p_param_ty_namex)
    BIND (IRI(CONCAT(STR(java:parameterTypeDims), ?lastp)) AS ?p_param_ty_dimsx)

    GRAPH <http://codinuum.com/ont/cpi> {
      ?p_childx rdfs:subPropertyOf src:child .
    }
    BIND (STRAFTER(STR(?p_childx), "child") AS ?x)
    BIND (fn:number(?x) AS ?xn)
    FILTER (?xn >= ?nparams && ?xn < ?nargs)

    ?args ?p_childx ?ax .
    ?meth ?p_param_ty_namex ?ptynamex .
    OPTIONAL {
      ?meth ?p_param_ty_dimsx ?ptydimsx .
    }
    OPTIONAL {
      ?ax java:typeDims ?atydimsx .
    }

    FILTER ((NOT EXISTS {
      ?ax java:typeName ?atynamex .
      FILTER (?atynamex = ?ptynamex)
    } && NOT EXISTS {
      ?ptyx a java:TypeDeclaration ;
            ver:version ?ver ;
            java:fullyQualifiedName ?ptynamex .
      ?ax java:ofReferenceType ?atyx .
      ?atyx java:subTypeOf ?ptyx OPTION (TRANSITIVE, T_DISTINCT, T_MIN(0)) ;
            ver:version ?ver .
    } && ?ptynamex != "java.lang.Object") ||
            (BOUND(?atydimsx) && ?atydimsx != ?ptydimsx))
  }))

  BIND (CONCAT(?mfqn, ?msig) AS ?sig)

}
