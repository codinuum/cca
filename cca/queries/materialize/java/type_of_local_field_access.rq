
DEFINE input:inference "ont.cpi"

PREFIX ent:  <http://codinuum.com/fact/entity/>
PREFIX rel:  <http://codinuum.com/fact/version/release/>
PREFIX ext:  <http://codinuum.com/fact/external/>
PREFIX src:  <http://codinuum.com/ontologies/2012/10/source-code-entity#>
PREFIX ver:  <http://codinuum.com/ontologies/2012/10/versioning#>
PREFIX chg:  <http://codinuum.com/ontologies/2012/10/primitive-change#>
PREFIX java: <http://codinuum.com/ontologies/2012/10/java-entity#>
PREFIX c:    <http://codinuum.com/ontologies/2012/10/c-entity#>


INSERT {
  ?x java:typeName ?tyname ;
     java:typeDims ?dims .
}
USING <http://codinuum.com/ont/cpi>
WHERE {

  FILTER NOT EXISTS {
    ?x java:typeName [] .
  }

  {
    SELECT DISTINCT ?x ?fname ?vdtor
    WHERE {

      ?x a java:FieldAccess ;
         java:name ?fname ;
         java:declaredBy ?vdtor .

      FILTER (EXISTS {
        ?this a java:This ;
              src:parent ?x .
      } || NOT EXISTS {
        [] src:parent ?x .
      })

    } GROUP BY ?x ?fname ?vdtor
  }

  ?field a java:FieldDeclaration ;
         src:child1 ?ty ;
         src:child2 ?vdtor ;
         java:inTypeDeclaration ?tdecl .

  ?vdtor a java:VariableDeclarator ;
         src:parent ?field ;
         java:name ?fname .

  ?ty a java:Type ;
      a ?cat OPTION (INFERENCE NONE) ;
      src:parent ?field .

  {
    ?cat rdfs:label ?tyname0 .
    BIND (STR(?tyname0) AS ?tyname)
  }
  UNION
  {
    ?ty java:name ?tyname .
  }

  OPTIONAL {
    ?ty java:dimensions ?dims .
  }

  FILTER EXISTS {
    ?x java:inTypeDeclaration/ver:version ?ver .
    ?tdecl ver:version ?ver .
  }

}
